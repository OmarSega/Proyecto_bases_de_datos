
import java.awt.List;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Marco
 */
public class frmEditInvestigador extends javax.swing.JFrame {
    String idInvestigador;
    static String investigador [];
    /**
     * Creates new form frmEditInvestigador
     */
    public frmEditInvestigador(String investigador[]) {
        this.investigador = investigador;
        initComponents();
        nombre.setText(investigador[1]);
        paterno.setText(investigador[2]);
        materno.setText(investigador[3]);
        setList();
        setCombo();
        
        
    }
    public void setList(){
        try{
            
            // para utilizar el procedimiento almacenado
            // La clase CallableStament sirve para mandar a llamar procedimientos

            Connection con = conexion.getConexion();
            Statement st = con.createStatement();
            String query = "SELECT c.idCentroInvestigacion as id, c.nombre "
                   + "FROM `investigador` i join investigador_centro ic "
                   + "on i.idInvestigador = ic.idInvestigador join centro_investigacion c "
                   + "on ic.idCentro = c.idCentroInvestigacion where i.idInvestigador = '"+investigador[0]+"'";
            //String cluster = txtcluster.getText();
            ResultSet rs = st.executeQuery(query);
            String id_parcial[] = new String[25];
            
            int i = 0;
            while(rs.next())
            {
                id_parcial[i] = rs.getString("id") + " " + rs.getString("nombre") ;
                i++;
                  //id_parcial = rr.getString("p.ID_P");
            }
           
            jList1.setListData(id_parcial);
            //st.execute(query);

            // para utilizar el procedimiento almacenado
            // La clase CallableStament sirve para mandar a llamar procedimientos

            con.close();

            /*JOptionPane.showMessageDialog(null,"Se ha creado exitosamente");
            nombre.setText("");
            paterno.setText("");
            materno.setText("");*/
        }
        catch(SQLException ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null,"Ha ocurrido un problema");
            this.dispose();
        }
    }
    
    public void setCombo(){
        try{
            
            // para utilizar el procedimiento almacenado
            // La clase CallableStament sirve para mandar a llamar procedimientos

            Connection con = conexion.getConexion();
            Statement st = con.createStatement();
            String query = "SELECT idCentroInvestigacion as id, nombre "
                   + "FROM `centro_investigacion` ";
            //String cluster = txtcluster.getText();
            ResultSet rs = st.executeQuery(query);
            String id_parcial[] = new String[30];
            
            int i = 0;
            jComboBox1.removeAllItems();
            while(rs.next())
            {
                jComboBox1.addItem(rs.getString("id") + " " + rs.getString("nombre"));
                id_parcial[i] = rs.getString("id") + " " + rs.getString("nombre") ;
                i++;
                  //id_parcial = rr.getString("p.ID_P");
            }
            
            
           
            //st.execute(query);

            // para utilizar el procedimiento almacenado
            // La clase CallableStament sirve para mandar a llamar procedimientos

            con.close();

            /*JOptionPane.showMessageDialog(null,"Se ha creado exitosamente");
            nombre.setText("");
            paterno.setText("");
            materno.setText("");*/
        }
        catch(SQLException ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null,"Ha ocurrido un problema");
            this.dispose();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paterno = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        materno = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        actulizarInvestigador = new javax.swing.JButton();
        nombre = new javax.swing.JTextField();
        cerrar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel11.setFont(new java.awt.Font("Utsaah", 0, 29)); // NOI18N
        jLabel11.setText("Editar");

        jLabel12.setFont(new java.awt.Font("Utsaah", 2, 18)); // NOI18N
        jLabel12.setText("Investigador");
        jLabel12.setToolTipText("");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Nombre:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Apellido Materno:");

        actulizarInvestigador.setText("Actualizar");
        actulizarInvestigador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actulizarInvestigadorActionPerformed(evt);
            }
        });

        cerrar.setText("Cancelar");
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Apellido Paterno:");

        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Agregar Centro de Investigacion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Quitar Centro de Investigacion");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Actualizar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Centro de Investigaciones Asociados con Investigador");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel3.setText("Transferencia de Tecnolog√≠a ");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo2.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addGap(74, 74, 74)
                                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel14))
                                    .addGap(23, 23, 23)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(paterno, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(materno, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(actulizarInvestigador)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cerrar))))
                                .addComponent(jLabel12))
                            .addComponent(jLabel16))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(280, 280, 280))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(materno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actulizarInvestigador)
                    .addComponent(cerrar))
                .addGap(45, 45, 45)
                .addComponent(jLabel16)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(12, 12, 12)
                        .addComponent(jButton3)))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actulizarInvestigadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actulizarInvestigadorActionPerformed

        try{
            // para utilizar el procedimiento almacenado
            // La clase CallableStament sirve para mandar a llamar procedimientos

            Connection con = conexion.getConexion();
            Statement st = con.createStatement();
           String query = "UPDATE investigador SET nombre = '"+ nombre.getText() + "',"
            + " apellido_paterno = '"+paterno.getText()+"', apellido_materno = '"+materno.getText()+"' WHERE idInvestigador = '"+investigador[0]+"'";
            //String cluster = txtcluster.getText();
            st.execute(query);

            // para utilizar el procedimiento almacenado
            // La clase CallableStament sirve para mandar a llamar procedimientos

            con.close();

            JOptionPane.showMessageDialog(null,"Se ha actualizado exitosamente");
            /*nombre.setText("");
            paterno.setText("");
            materno.setText("");*/
        }
        catch(SQLException ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null,"Ha ocurrido un problema");
            this.dispose();
        }
    }//GEN-LAST:event_actulizarInvestigadorActionPerformed

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cerrarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            // para utilizar el procedimiento almacenado
            // La clase CallableStament sirve para mandar a llamar procedimientos
            String centro[] = jComboBox1.getItemAt(jComboBox1.getSelectedIndex()).split(" ");
            Connection con = conexion.getConexion();
            Statement st = con.createStatement();
            String query = "INSERT INTO `investigador_centro` VALUES ('"
                    +investigador[0]+"','"+centro[0]+"')";
            //String cluster = txtcluster.getText();
            st.execute(query);

            // para utilizar el procedimiento almacenado
            // La clase CallableStament sirve para mandar a llamar procedimientos

            con.close();

            JOptionPane.showMessageDialog(null,"Se ha actualizado exitosamente");
            /*nombre.setText("");
            paterno.setText("");
            materno.setText("");*/
        }
        catch(SQLException ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null,"Ha ocurrido un problema");
            this.dispose();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(jList1.getSelectedIndex() > 0){
            try{
                // para utilizar el procedimiento almacenado
                // La clase CallableStament sirve para mandar a llamar procedimientos
                String centro[] =jList1.getSelectedValue().toString().split(" ");
                Connection con = conexion.getConexion();
                Statement st = con.createStatement();
                String query = "DELETE FROM investigador_centro WHERE "
                       + "idInvestigador = '"+investigador[0]+"' and "
                       + "idCentro = '"+centro[0]+"'";
                //String cluster = txtcluster.getText();
                st.execute(query);

                // para utilizar el procedimiento almacenado
                // La clase CallableStament sirve para mandar a llamar procedimientos

                con.close();

                JOptionPane.showMessageDialog(null,"Se ha desvinculado correctamente");
                /*nombre.setText("");
                paterno.setText("");
                materno.setText("");*/
            }
            catch(SQLException ex){
                System.out.println(ex.getMessage());
                JOptionPane.showMessageDialog(null,"Ha ocurrido un problema");
                this.dispose();
            }
        }
        else {
            JOptionPane.showMessageDialog(null,"Seleccione uno para borrar");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
            
            // para utilizar el procedimiento almacenado
            // La clase CallableStament sirve para mandar a llamar procedimientos

            Connection con = conexion.getConexion();
            Statement st = con.createStatement();
           String query = "SELECT c.idCentroInvestigacion as id, c.nombre "
                   + "FROM `investigador` i join investigador_centro ic "
                   + "on i.idInvestigador = ic.idInvestigador join centro_investigacion c "
                   + "on ic.idCentro = c.idCentroInvestigacion where i.idInvestigador = '"+investigador[0]+"'";
            //String cluster = txtcluster.getText();
            ResultSet rs = st.executeQuery(query);
            String id_parcial[] = new String[25];
            
            int i = 0;
            while(rs.next())
            {
                id_parcial[i] = rs.getString("id") + " " + rs.getString("nombre") ;
                i++;
                  //id_parcial = rr.getString("p.ID_P");
            }
           
            jList1.setListData(id_parcial);
            //st.execute(query);

            // para utilizar el procedimiento almacenado
            // La clase CallableStament sirve para mandar a llamar procedimientos

            con.close();

            /*JOptionPane.showMessageDialog(null,"Se ha creado exitosamente");
            nombre.setText("");
            paterno.setText("");
            materno.setText("");*/
        }
        catch(SQLException ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null,"Ha ocurrido un problema");
            this.dispose();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmEditInvestigador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmEditInvestigador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmEditInvestigador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmEditInvestigador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmEditInvestigador(investigador).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actulizarInvestigador;
    private javax.swing.JButton cerrar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField materno;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField paterno;
    // End of variables declaration//GEN-END:variables
}
